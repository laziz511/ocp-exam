
how to properly override toString(), equals(Object), and hashCode()


- toString(): The toString() method is called when you try to print an object or concatenate the object with a String.
    It is commonly overridden with a version that prints a unique description of the instance using its instance fields.

- equals(Object): The equals(Object) method is used to compare objects,
    with the default implementation just using the == operator.
    You should override the equals(Object) method any time you want to conveniently compare elements for equality,
    especially if this requires checking numerous fields.

- hashCode(): Any time you override equals(Object), you must override hashCode() to be consistent.
    This means that for any two objects, if a.equals(b) is true, then a.hashCode()==b.hashCode() must also be true.
    If they are not consistent, this could lead to invalid data and side effects in hash-based collections
        such as HashMap and HashSet.

All of these methods provide a default implementation in Object,
but if you want to make intelligent use of them, you should override them.
